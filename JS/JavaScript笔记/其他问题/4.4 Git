一、了解Git
    1、版本控制软件：是用来记录文件变化，以便将来查阅特定版本修订情况的系统，因此也叫版本控制系统。
    也可以理解为把手工管理文件版本的方式改为由软件管理文件版本，这个负责管理文件版本的软件，就叫版本控制软件
    2、分类：
        本地版本控制系统：单机运行，不能多人协作，使维护文件版本的操作工具化；版本数据库故障后，所有历史更新记录会丢失
        集中化版本控制系统：联网运行，支持多人协作；性能差，用户体验不好；中心服务器崩溃后，所有人无法正常工作，版本数据库故障后，所有历史更新记录会丢失。（典型代表：SVN）
        分布式版本控制系统：联网运行，支持多人协作；性能优秀，用户体验好；服务器故障或损坏后，可使用任何一个客户端的备份进行恢复。（典型代表：Git）
    3、Git特性
        1、直接记录快照，而非差异比较
        在原有文件版本的基础上重新生成一份新的文件，类似于备份，如果文件没有修改，git不再重新储存该文件，而是只保留一个链接指向之前存储的文件（空间换时间）
        2、近乎所有操作都是本地执行
        在git的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其他计算机的信息；断网后依旧可以在本地对项目进行版本管理；联网后再把本地修改的记录同步到云端服务器即可
    4、git的三个区域
        1、工作区：处理工作的区域
            工作区的每个文件可能有四个状态，分为两大类：
            未被git管理: 未跟踪，不被git所管理的文件
            已被git管理：未修改，工作区和git仓库中的文件内同保持一致；已修改，文件内容不一致；已暂存，被修改的文件放到暂存区，准备保存到git仓库。
            git操作的最终结果应是让工作区的文件都处于“未修改”的状态
        2、暂时区：已完成的工作的临时存放区域，等待被提交
        3、Git仓库：最终的存放区域
    5、三个状态
        1、已修改：修改了文件，但还没将修改的结果放到暂存区（工作区的文件被修改了，但还没放到暂存区）
        2、已暂存：对已修改文件的当前版本做了标记，使之包含在下次提交的列表中（文件已修改并放入了暂存区）
        3、已提交：表示文件已经安全的保存在本地的git仓库中（git仓库中保存着特定版本的文件）
    6、git基本工作流程
        在工作区中修改文件
        将想要下次提交的更改进行暂存
        提交更新，找到暂存区的文件，将快照永久性存储到git仓库
二、git基本操作
    1、安装后设置自己的用户名和邮件地址（因为通过git对项目进行版本管理的时候，git需要使用这些基本信息来记录是谁对项目进行了操作）
        git config --global user.name "Juuuuuucat"
        git config --global user.email "wxw00509@163.com" //使用了--global选项，那么该命令只需运行一次就永久生效；这些全局配置存储在C:/用户/19336/.gitconfig文件里（还可以使用给git config --list --global查看所有全局配置；或者git config user.name查看一项）
    2、可以使用git help+命令 在浏览器打开帮助手册
        还可以使用git+命令 -h 在终端中获取更简明的帮助
    3、获取可用的git仓库：
        1、从其他服务器克隆一个已存在的git仓库
        2、将尚未进行版本控制的本地目录转换为git仓库
            在项目目录中打开"git bash"，
            执行git init，可以将当前目录转化为git仓库（这个命令会创建一个.git隐藏目录，就是当前项目的git仓库，里面包含了初始的必要文件，这些文件是git仓库的必要组成部分）
    4、检查文件状态
        可以使用git status查看文件处于什么状态
        [后面加-s/--short表示希望以精简的方式显示状态]
    5、跟踪新文件
        使用git add+文件名 开始跟踪一个文件（添加到暂存区，还未提交到git仓库）使用git add . 可以将所有文件都加入暂存区
        使用git commit -m +提交描述信息 进行提交
    6、对已提交的文件进行修改后，前面会有红色的M标记；需要再次运行git add把已跟踪且已修改的文件放到暂存区(变为绿色的M)
        然后再运行git commit -m "提交信息"，将暂存区中的记录提交到git仓库保存
    7、撤销对文件的修改
        git checkout -- 文件名 //用git仓库中保存的文件覆盖工作区中指定的文件
    8、从暂存区移除文件
        git reset HEAD 文件名
    9、跳过暂存区，工作区直接提交到git仓库
        git commit -a -m "描述信息"
    10、从git仓库中移除文件
        1、从git仓库和工作区中同时移除
        git rm -f 文件名
        2、只从git仓库移除
        git rm --cached 文件名
    11、忽略文件：配置.gieignore文件
    12、查看项目提交历史
        git log //按时间顺序列出所有
        git log -2 //只看最近两条提交历史
    13、回退到指定的版本
        git reset --hard 提交ID //回退到指定版本
三、GitHub远程仓库两种访问方式：
    1、HTTPS：不需要配置，但是每次访问都要输入账号和密码才能访问
    2、SSH：需要配置；配置成功后，每次访问仓库都不需要输入账号和密码