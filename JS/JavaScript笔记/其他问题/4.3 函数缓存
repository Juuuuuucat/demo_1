一、函数缓存
    函数缓存就是将函数运算过的结果进行缓存，本质上就是用空间（缓存）换时间（计算过程）。缓存只是一个临时的数据存储，它保存数据，以便将来对该数据的请求能够更快地得到处理。
二、实现
    实现函数缓存主要依靠闭包、高阶函数
    把参数和对应的结果数据存在一个对象中，调用时判断参数对应的数据是否存在，存在就返回对应的结果数据，否则就返回计算结果。
三、应用场景
    虽然使用缓存效率是非常高的，但并不是所有场景都使用，千万不要极端的将所有函数都添加缓存
    适合使用缓存的情况：
        1、对于昂贵的函数调用，执行复杂计算的函数
        2、对于具有有限且高度重复输入范围的函数
        3、对于具有重复输入值的递归函数
        4、对于纯函数，即每次使用特定输入调用时返回相同输出的函数