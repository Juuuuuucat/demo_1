1、window
    window对象不仅充当全局作用域，而且表示浏览器窗口。
        window.innerWidth //获取浏览器窗口的内部宽度(除去菜单栏、工具栏、边框等占位元素,显示网页的净宽高)
        window.innerHeight //获取浏览器窗口的内部高度
        还有outerWidth和outerHeight属性，可以获取浏览器窗口的整个宽高
2、navigator
    navigator对象表示浏览器的信息，最常用的属性有：
        navigator.appName //浏览器名称
        navigator.language //浏览器设置的语言
        navigator.appVersion //浏览器版本
        navigator.platform //操作系统类型
        navigator.userAgent //浏览器设定的User-Agent字符串
    但是注意，navigator的信息很容易被用户修改
3、screen
    screen对象表示屏幕的信息
        screen.width //屏幕宽度，以像素为单位
        screen.height //屏幕高度，以像素为单位
        screen.colorDepth //返回颜色位数
4、location
    location对象表示当前页面的URL信息；需加载一个新页面，可以调用location.assign();要重新加载当前页面，调用location.reload()
5、document
    document对象表示当前页面，由于HTML在浏览器中以DOM的形式表示为树形结构，document对象就是整个DOM树的根节点，要查找DOM树的某个节点，需要从document对象开始查找。
    document.title //获得HTML文档中<title>，可以通过document.title = '新标题';修改标题
    document.getElementById('xx') //按ID获得一个DOM节点
        一般都是使用document.querySelector('选择器')
    document.getElementByTagName('xx')//按Tag名称获得一组DOM节点
    document.cookie //获取当前页面的cookie
        cookie是由服务器发送的key-value标识符。因为HTTP协议是无状态的，但是服务器要区分到底是哪个用户发过来的请求，就可以用cookie来区分。当用户成功登录后，服务器发送一个cookie给浏览器，此后，浏览器访问该网站时，会在请求头附上这个cookie，服务器根据cookie即可区分出用户。cookie还可以存储网站的一些设置，例如页面显示的语言等。由于JS可以读取到页面的cookie，而用户的登录信息通常也存在cookie中，这就造成了巨大的安全隐患，因为允许在HTML页面中引入第三方的JS代码，如果引入的第三方的JS代码中存在恶意代码，可以直接获取到网站的用户登录信息
        为了解决这个问题，服务器在设置cookie时可以使用httpOnly，设定了httpOnly的Cookie将不能被JavaScript读取。为了确保安全，服务器端在设置Cookie时，应该始终坚持使用httpOnly。
6、history
    history对象保存了浏览器的历史记录
    可以调用history对象的back()或forward(),相当于浏览器的后退或前进；不建议使用