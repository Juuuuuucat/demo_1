可以使用 Array.isArray(变量) 来检测是否为数组，也可以用 变量 instanceof Array 。数组有length属性，会返回数组的长度，如果为length设置一个更小的值会截断数组；如果设置一个更大的值，多余的是undefined
一、操作方法
    1、增（前三种是对原数组产生影响的增添方法,第四种则不会）
        1、push() 
        接受任意数量的参数,并将它们添加到数组末尾,返回数组的最新长度
        2、unshift()
        在数组开头添加任意多个值,返回新的数组长度
        3、splice()-------万能法
        传入三个参数(开始位置,要删除的元素个数,插入的元素)，返回由删除元素组成的数组(如果删除元素个数为0,则返回空数组)
        4、concat()
        创建一个当前数组的副本,然后再把它的参数添加到副本末尾,最后返回新创建的数组,不会影响原数组
    2、删（前三种是对原数组产生影响的删除方法,第四种则不会）
        1、pop()
        删除数组的最后一项,同时减少length值,返回被删除的项
        2、shift()
        删除数组的第一项,同时减少length值,返回被删除的项
        3、splice()
        传入两个参数(开始位置,要删除的元素个数)，返回由删除元素组成的数组(如果删除元素个数为0,则返回空数组)
        4、slice()
        截取Array的部分元素,(包含开始索引,不包括结束索引)返回一个新数组,不会影响原始数组
        如果不传递任何参数,则从头到尾截取所有元素（当数组里是引用数据类型，就是浅拷贝）
    3、改
        splice()
        传入三个参数(开始位置,要删除的元素个数,插入的元素)，返回由删除元素组成的数组，对原数组产生影响
        或者直接arr[n] = x;
    4、查
        1、indexOf()
        返回要查找的元素在数组中的(第一个)位置索引,没有找到则返回-1
        2、lastIndexOf()
        返回要查找的元素在数组中的最后一个位置索引，没有就返回-1；
        2、includes()
        返回要查找的元素在数组中的位置,找到返回true,否则false
        3、find(回调函数)
        查找符合条件的第一个元素，找到就返回第一个匹配的元素，否则返回undefined；对于空数组是不会执行的。
        回调函数有三个参数：value,index,arr
        4、findIndex()
        和find()类似，也是查找符合条件的第一个元素，不同之处在于findIndex()会返回这个元素的索引，如果没有找到，返回-1
二、排序方法
    1、reverse()
    将数组元素反转(对数组直接修改)
    2、sort()
    接收一个比较函数,用于判断哪个值应该排在前面(会直接对Array进行修改)
三、转换方法
    join()
    接受一个参数,即字符串分隔符,返回包含所有项的"字符串"，不改变原数组
    如果没有参数，则是带,的字符串
四、迭代方法
    1、some()
    参数是函数,对数组每一项都运行测试函数,如果至少有1个元素符合,就返回true,否则返回false；如果找到第一个元素符合条件，就结束循环，返回true；如果在函数里有return，会终止迭代。
    2、every()
    对数组每一项都运行测试函数,如果所有元素都符合,就返回true,否则返回false
    3、forEach()
    对数组每一项都运行传入的函数function(value,index,arr),“没有返回值”(undefined),但是会修改原数组；如果在函数里有return，也不会终止迭代。
    遍历通常都是直接引入当前数组的内存地址
    4、filter()---过滤
    对数组每一项都运行传入的函数,函数返回 true 的项会组成一个“新数组”之后返回；主要用于筛选数组。如果在函数里有return，也不会终止迭代。
    5、map()---映射
    对数组每一项都运行传入的函数,得到一个“新数组”并返回
    map会首先创建一个新数组，然后将原数组的每个元素执行提供的函数得到的结果填入新数组
        Array.form()方法，第一个参数为数组，第二个参数(可选)为处理函数，不影响原数组，返回新数组
    6、reduce(函数, 默认值)---归并
    把函数作用在数组的每一项上，这个函数必须接受两个参数(prev,next)，reduce()把结果继续和数组的下一个元素做累计运算
    prev为上一次回调的返回值，或者是初始默认值
    next为当前正在处理的数组元素
五、forEach和map区别
    forEach()会改变原始数组的值；map()会返回一个全新的数组，原数组不受影响
    能用forEach做到的，map也可以，反过来也一样
    map()会分配内存空间存储新数组并返回，forEach不会返回数据
    forEach允许callback回调函数更改原始数组的元素，map返回新数组
    map比forEach更快，它返回一个新的数组，意味着可以使用链式操作，而forEach不能
六、数组的for in循环
    如果只是普通的遍历数组元素还可以，但是存在一个问题，由于数组本身也是对象，我们可以随意给数组添加一些不必要的属性和属性值，当for.in循环时，会将这些属性值也都遍历出来。因此遍历数组一般不用for..in循环。
    在普通的for循环中for(let i = 0; i < arr.length; i++)，每次循环都要访问length属性其实也会有性能开销，可以使用一个变量缓存起来：
        for(let i = 0, l = arr.length; i < l; i++)
