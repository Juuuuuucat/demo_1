重排: 部分渲染树（或者整个渲染树）需要重新分析并且节点尺寸需要重新计算，表现为重新生成布局，重新排列元素。
重绘：由于节点的几何属性发生改变或者由于样式发生改变，例如改变元素背景色时，屏幕上的部分内容需要更新，表现为某些元素的外观被改变。
重绘不一定会出现重排，重排一定会出现重绘
重排和重绘的代价都是特别高昂的，它们会破坏用户体验，并且让UI展示非常迟缓，而相比之下重排的性能影响更大，在两者都无法避免的情况下，一般我们宁愿选择代价更小的重绘。
一、通过CSS实现隐藏元素方法有如下：
    display:none
    visibility:hidden
    opacity:0
    设置height、width模型属性为0
    position:absolute
    clip-path
1、display:none（最常用）
    设置后，元素在页面上将彻底消失，元素本身占有的空间就会被其他元素占有，导致浏览器的重排和重绘。而且自身绑定的事件不会触发，也不会有过渡效果
2、visibility:hidden（能见度 常用）
    占位隐藏--仅仅隐藏该元素，DOM结果均会存在，只是当时在一个不可见的状态，不会触发重排，但是会触发重绘。给人的效果是隐藏了，所以自身的事件不会触发
3、opacity:0（设置元素透明度）
    将元素的透明度设置为0后，在用户眼里，元素是隐藏的，不会触发重排，一般也会引发重绘。由于它仍然存在于页面上，所以它自身的事件还是可以触发的，但是被他遮挡的元素是不能触发其事件的。
    让元素整体(包括内容，子元素)一起变透明，和rgba不同
4、设置height、width属性为0
    将元素的margin、border、padding、height、width等影响元素盒模型的属性设置为0，如果元素内有子元素或内容，还应该设置其overflow:hidden来隐藏其子元素。元素不可见，不占据页面空间，无法响应点击事件
5、position:absolute
    将元素移除可视区域。元素不可见，不影响页面布局
6、clip-path
    通过裁剪的方式 clip-path: polygon(0px 0px,0px 0px,0px 0px,0px 0px);元素不可见，占据页面空间，无法响应点击事件
7、总结：
    最常用的还是display:none和visibility:hidden，其他方式只能认为是奇招，真正用途并不是用于隐藏元素，所以并不推荐使用它们。