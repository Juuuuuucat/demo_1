选择器{ //CSS属性 }
一、选择器
    CSS选择器用于查找(或选取)要设置样式的HTML元素；选择器所选择的元素叫做“选择器的对象”。
    1、常用选择器有：
    id选择器：#id //选择id为id的元素(id在一个页面中是唯一的)
    类选择器：.class //选择类名为class的所有元素
    标签选择器：div //选择标签为div的所有元素
    通配符选择器：* //对页面的所有标签设置样式(少用)，一般用于设置整个浏览器的margin:0;padding:0;或者消除超链接的下划线
    2、复合选择器有：
    后代选择器：选择器1 选择器2 //在1的所有后代中找到符合2的元素设置样式,(中间是空格)例如：
        #box div //选择id为box元素内部所有的div元素
    子选择器：选择器1>选择器2 //在1的所有子代中找到符合2的元素设置样式,例如：
        .one>.two //选择类名为one元素子代中类名为two的元素设置样式
    并集选择器：选择器1,选择器2 //选择多组标签(并集)
        div,p //选择div、p的所有元素
    交集选择器：选择器1选择器2 //中间紧挨着，选择同时满足多个选择器的元素
    兄弟选择器：.one+.two //选择紧接着在.one之后的所有.two元素
    “伪类：专门用来表示元素的一种特殊状态”
    伪类选择器：选择器:hover //设置鼠标悬停在元素上的状态(任何标签都可以添加伪类)
        //a标签的伪类(:link(初始)/:visited(被点击后)/:hover(悬停)/:active(点击))
        //focus获得焦点
        //:first-child/:last-child/:nth-child(n)
        
    伪元素选择器:: first-letter //向文本的首字母添加特殊样式
    用于设置元素指定部分的样式。例如，它可用于：设置元素的首字母、首行的样式,在元素的内容之前或之后插入内容
        通过CSS创建标签，找父级，在父级里面创建子级标签。"content属性必须有，不然不生效"
    //::first-line 只能应用于块级元素
    属性选择器：[key[=value]] //选择带有key(=value)属性的元素 
        [属性名]：包含有指定属性名的元素(常用)
        [属性名=值]：属性名的值为指定的元素(常用)
        [属性名~=值]：属性名的值包含指定值的元素
        [属性名^=值]：属性名的值以指定值开头的元素
        [属性名$=值]：属性名的值以指定值结尾的元素
二、优先级
    不同选择器具有不同的优先级，优先级高的会覆盖优先级低的
    内联>id选择器>类选择器>标签选择器>通配符选择器>继承
    到具体的计算层面，优先级是由(行内样式个数,id,类,标签)->(A,B,C,D)的值来决定的。具体的计算规则如下：
        如果存在内联样式，A=1,否则A=0
        B的值等于id选择器出现的次数
        C的值等于类选择器和属性选择器和伪类出现的总次数
        D的值等于标签选择器和伪元素出现的总次数
    比较规则：
        从左往右依次比较，较大者优先级更高
        如果相等，则继续往右移动一位进行比较
        如果4位全部相等，则后面的会覆盖前面的
    如果外部样式需要覆盖内联样式，需要使用!important
    “也就是样式权重：
        !important加在样式属性值后，权重值为10000
        内联样式，如：style=""，权重值为1000
        id选择器，如#content，权重值为100
        类、伪类，如.content、:hover，权重值为10
        标签、伪元素选择器，如div、p，权重值为1
        !important(10000)>内联(1000)>id(100)>类(10)>标签(1)”
三、继承属性
    在CSS中，给父元素设置一些属性，后代元素会自动拥有这些属性(继承)，但后代本身就有这些属性就不会继承父代的(重写)。
    继承属性可以分为：
        字体系列属性、文本系列属性、表格布局属性、。。
    注意：a标签的字体颜色不能被继承；h1-h6标签字体的大小也是不能被继承的
    无继承属性有：
        display、盒子模型属性、背景属性。。

四、CSS伪元素：用于向某些选择器设置特殊效果。
    
    1、css伪元素和伪类的区别：
        css引入伪类和伪元素概念是为了格式化文档树以外的信息。也就是说伪类和伪元素是用来修饰不在文档树中的部分。
        伪类用于当已有元素处于某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的(比如鼠标悬停等)。它只有处于DOM树无法描述的状态下才能为元素添加样式，所以称其为伪类。
        伪元素用于创建一些不在文档树中的元素，并为其添加样式。比如说，我们可以通过::before来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。
    2、特点：
        伪元素和伪类都不会出现在原文档或者文档树中
        伪类允许出现在选择器的任何位置，而一个伪元素只能跟在选择器的最后一个简单选择器后面
        伪类名和伪元素名都是大小写不敏感的
        有些伪类是互斥的，而其它的可以同时用在一个元素上
    3、:before/:after/:first-letter/:first-line前面可以是1个冒号也可以是2个冒号
    ::selection/::placeholder/::backdrop前面只能是2个冒号
