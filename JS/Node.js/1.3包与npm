1、包
    Node.js中第三方模块又叫做包。只不过叫法不同。不同于内置模块和自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。包是基于内置模块封装出来的，提供了更高级更方便的API，极大提高了开发效率。
2、从哪里下载包
    npm, Inc.公司提供了服务器，对外共享所有的包，我们可以从这个服务器下载自己所需要的包。还提供了包管理工具，我们可以使用这个工具从服务器把需要的包下载到本地使用，这个包管理工具就叫npm。（Node.js自带了npm）
3、在项目中安装指定名称的包
    npm install 包  //npm uninstall 包 可以卸载指定包
    npm i 包       //自动安装最新版本的包
    npm i 包@版本号 //安装指定版本号的包
    初次装包完成后，在项目文件夹下多了node_modules文件夹(存放所有已安装到项目中的包。require()导入第三方包时，就是从这个目录查找和加载的)和package-lock.json的配置文件（记录node_modules目录下的每个包的下载信息）；不要手动修改这两个文件中的任何代码，npm包管理工具会自动维护它们。
    npm规定，在项目根目录下，必须提供一个叫做package.json的包管理配置文件，用来记录与项目有关的一些配置信息。
        包的版本号是以点分十进制进行定义的，总共三位数字，例如2.24.0 其中
            第一位数字：大版本；
            第二位：功能版本；
            第三位：Bug修复版本 //只要前面的版本号增长了，则后面的版本号归零
4、问题
    1、多人协作问题：第三方包的体积过大，不方便成员之间共享项目源代码，因此剔除node_modules文件夹，在项目根目录，创建一个package.json的配置文件，记录项目中安装了哪些包
    2、快速创建package.json
    npm init -y //在执行命令所处的目录中，快速创建(项目文件夹名称一定是英文)
    3、拿到剔除了node_modules文件夹的项目后，可以使用npm install命令一次性下载所有的依赖包（因为npm会读取package.json文件中的dependencies节点，这个节点中记录了所有依赖包名称和版本号）
    4、如果某些包只在项目开发阶段用到，项目上线后不会用到(比如webpack)，可以将这些包记录到devDependencies节点（开发依赖包；其他的是核心依赖包）
        npm i 包 -D //等价于 npm install 包 --save-dev
    5、切换下包镜像源
        npm config set registry=https://registry.npm.taobao.org/
5、nrm
    为了方便切换下包镜像源